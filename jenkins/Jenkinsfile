pipeline {
    agent any

    environment {
        SLACK_WEBHOOK = credentials('slack-webhook') // Slack webhook URL from Jenkins credentials
        GITHUB_PAT = credentials('github-pat') // GitHub Personal Access Token from Jenkins credentials
    }

    stages {
        stage('Clone') {
            steps {
                git 'https://github.com/udaybhadauria/flask-cicd.git'
            }
        }

        stage('Fetch .env from GitHub') {
            steps {
                sh '''
                echo "Fetching latest GitHub Actions artifact containing .env..."
                
                ARTIFACT_ID=$(curl -s -H "Authorization: token $GITHUB_PAT" \
                  https://api.github.com/repos/udaybhadauria/flask-cicd/actions/artifacts \
                  | jq '.artifacts[0].id')

                echo "Artifact ID: $ARTIFACT_ID"

                curl -L -H "Authorization: token $GITHUB_PAT" \
                  -o env-artifact.zip \
                  https://api.github.com/repos/udaybhadauria/flask-cicd/actions/artifacts/$ARTIFACT_ID/zip

                unzip -o env-artifact.zip
                mv .env /home/pi/flask-cicd/.env
                chmod 600 /home/pi/flask-cicd/.env
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t flask-cicd-app .' // Build the Flask App Docker Image
            }
        }

        stage('Run Unit Tests') {
            steps {
                sh 'echo "Running API unit tests..."'
                sh 'chmod +x app/run_tests.sh'
                sh './app/run_tests.sh'
            }
        }

        stage('Run Container') {
            steps {
                sh '''
                sudo systemctl restart flask-app // Restart Docker Container as It's being run already using systemctl
                '''
            }
        }
    }

    post {
        success {
            echo "Posting success message to Slack..."
            script {
                def msg = """{
                  "text": "✅ *Build SUCCESS*: Job ${env.JOB_NAME} #${env.BUILD_NUMBER} - <${env.BUILD_URL}|View Build>"
                }"""
                sh "curl -X POST -H 'Content-type: application/json' --data '${msg}' ${env.SLACK_WEBHOOK}"
            }
        }

        failure {
            echo "Posting failure message to Slack..."
            script {
                def msg = """{
                  "text": "❌ *Build FAILED*: Job ${env.JOB_NAME} #${env.BUILD_NUMBER} - <${env.BUILD_URL}|View Build>"
                }"""
                sh "curl -X POST -H 'Content-type: application/json' --data '${msg}' ${env.SLACK_WEBHOOK}"
            }
        }
    }
}
