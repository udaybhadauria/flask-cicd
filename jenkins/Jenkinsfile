pipeline {
    agent any

    environment {
        GITHUB_PAT = credentials('github-pat') // GitHub Personal Access Token
        SLACK_WEBHOOK = credentials('slack-webhook') // Slack Webhook URL
        JWT_SECRET_KEY = credentials('jwt-secret-key') // Add this in Jenkins credentials if used
    }

    stages {
        stage('Clone') {
            steps {
                git 'https://github.com/udaybhadauria/flask-cicd.git'
            }
        }

        stage('Prepare .env') {
            steps {
                script {
                    writeFile file: '.env', text: """
                    SLACK_WEBHOOK_URL=${SLACK_WEBHOOK}
                    JWT_SECRET_KEY=${JWT_SECRET_KEY}
                    """
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t flask-cicd-app .' // Build the Docker image
            }
        }

        stage('Run Unit Tests') {
            steps {
                sh 'echo "Running API unit tests..."'
                sh 'chmod +x app/run_tests.sh'
                sh './app/run_tests.sh'
            }
        }

        stage('Run Container') {
            steps {
                sh 'sudo systemctl restart flask-app' // Restart the container using systemctl
            }
        }
    }

    post {
        success {
            sh '''
            curl -X POST -H "Content-type: application/json" --data '{
                "text": "✅ *Build SUCCESS*: Job ${env.JOB_NAME} #${env.BUILD_NUMBER} - <${env.BUILD_URL}|View Build>"
            }' $SLACK_WEBHOOK
            '''
        }

        failure {
            sh '''
            curl -X POST -H "Content-type: application/json" --data '{
                "text": "❌ *Build FAILED*: Job ${env.JOB_NAME} #${env.BUILD_NUMBER} - <${env.BUILD_URL}|View Build>"
            }' $SLACK_WEBHOOK
            '''
        }
    }
}
